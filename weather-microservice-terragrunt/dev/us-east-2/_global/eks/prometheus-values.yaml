alertmanager:
  ## If false, alertmanager will not be installed
  ##
  enabled: true

  ## Node tolerations for alertmanager scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "logging"
      effect: "NoSchedule"

  ## Node labels for alertmanager pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector:
    Environment: logging

  persistence:
    ## If true, alertmanager will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true


    ## alertmanager data Persistent Volume size
    ##
    size: 100Gi


  ## alertmanager resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi


## Monitors ConfigMap changes and POSTs to a URL
## Ref: https://github.com/jimmidyson/configmap-reload
##
configmapReload:
  prometheus:
    ## If false, the configmap-reload container will not be deployed
    ##
    enabled: true

kubeStateMetrics:
  ## If false, kube-state-metrics sub-chart will not be installed
  ##
  enabled: true

## kube-state-metrics sub-chart configurable values
## Please see https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-state-metrics
##
# kube-state-metrics:

## promtheus-node-exporter sub-chart configurable values
## Please see https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus-node-exporter
##
prometheus-node-exporter:
  ## If false, node-exporter will not be installed
  ##
  enabled: true

server:
  ## Prometheus server container name
  ##
  enabled: true

  ## Prometheus server container image
  ##
  image:
    tag: v2.39.1

  ## External URL which can access prometheus
  ## Maybe same with Ingress host name
  baseURL: "https://prom.in.sportsxapp.com"

  readinessProbeInitialDelay: 60
  readinessProbePeriodSeconds: 5
  readinessProbeTimeout: 4
  readinessProbeFailureThreshold: 10
  readinessProbeSuccessThreshold: 1
  livenessProbeInitialDelay: 60
  livenessProbePeriodSeconds: 15
  livenessProbeTimeout: 10
  livenessProbeFailureThreshold: 10
  livenessProbeSuccessThreshold: 1
  startupProbe:
    enabled: true
    periodSeconds: 5
    failureThreshold: 30
    timeoutSeconds: 10

  ingress:
    ## If true, Prometheus server Ingress will be created
    ##
    enabled: true

    # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
    ingressClassName: nginx-public

    ## Prometheus server Ingress annotations
    ##
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: "monitoring/prom-basic-auth"
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'

    ##
    hosts:
      - prom.in.sportsxapp.com

    ## Prometheus server Ingress TLS configuration
    ## Secrets must be manually created in the namespace
    ##
    tls:
      - secretName: prom-in-nonprod-tls
        hosts:
          - prom.in.sportsxapp.com

  ## Node tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "logging"
      effect: "NoSchedule"

  ## Node labels for Prometheus server pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector:
    Environment: logging

  persistentVolume:
    ## If true, Prometheus server will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true

    ## Prometheus server data Persistent Volume size
    ##
    size: 500Gi

  ## Prometheus server resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    limits:
      cpu: 4
      memory: 30Gi
    requests:
      cpu: 3
      memory: 20Gi

  ## Prometheus data retention period (default if not specified is 15 days)
  ##
  retention: "60d"

prometheus-pushgateway:
  ## If false, pushgateway will not be installed
  ##
  enabled: false
